Leetcode: Path SumII
iterate each level and recursive call SumRe(given number-node->val)
/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int> > pathSum(TreeNode *root, int sum) {
        //recursive: time O(n),space O(logn)
        vector<vector<int>> res;
        vector<int> path;
        pathSumRe(root,sum,res,path);
        return res;
    }
    void pathSumRe(TreeNode *root, int sum, vector<vector<int>> &res, vector<int> &path) {
        if(!root) return;
        if(!root->left&&!root->right){//leaf
            if(sum == root->val){
                path.push_back(root->val);
                res.push_back(path);
                path.pop_back();
            }
            return;
        }
        path.push_back(root->val);
        pathSumRe(root->left,sum-root->val,res,path);
        pathSumRe(root->right,sum-root->val,res,path);
        path.pop_back();
    }
};
